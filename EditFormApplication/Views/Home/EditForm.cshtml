@model EditFormApplication.Models.NewForm

@{
    ViewBag.Title = "EditForm";

}

<div class="container">
    @*@using (Html.BeginForm("EditForm", "Home", FormMethod.Post))
        {*@
    <form method="post" action="/Home/EditForm">
        <div class="form-group bg-light text-center pt-3 pb-3">
            <h3>Создание формы</h3>
        </div>
        @*@Html.HiddenFor(model=>model.Id)*@
        <div class="form-group">
            @*@Html.TextBoxFor(model => model.HeadForm, new { @class = "form-control", @placeholder = "Заголовок формы" })*@
            @*@Html.ValidationMessageFor(model => model.HeadForm)*@
        </div>
        <div class="form-group">
            @*@Html.TextAreaFor(model => model.DescriptionForm, new { @class = "form-control", @placeholder = "Описание формы" })*@
        </div>
        <h5>Поля формы:</h5><br>
        <div class="border border-secondary rounded p-3" id="container">

            <div class="field">
                <div class="form-row">
                    <div class="form-group col-md-5">
                        <input type="text" name='Fields[0].HeadField' />
                        @*@Html.TextBoxFor(model => model.Fields.HeadField, new { @class = "form-control form-control-inline", @placeholder = "Заголовок поля"})*@

                    </div>

                    @*@Html.DropDownListFor(model=>model.TypeFields, new SelectListItem[]
                        {
                            new SelectListItem(){ Text="Тип поля", Disabled = false},
                            new SelectListItem(){ Text="Один из списка", Value = "textarea"},
                            new SelectListItem(){ Text="Несколько из списка", Value = "textarea"},
                            new SelectListItem(){ Text="Раскрывающийся список", Value = "textarea"},
                            new SelectListItem(){ Text="Текст-строка", Value = "input"},
                            new SelectListItem(){ Text="Текст-абзац", Value = "input"}},
                            new { @onchange = "addElement(this);" })*@
                    <div class="form-group">
                        <input type="button" class="btn btn-default btn-xs col-md-1 ml-3" value="X" onclick="removeField(this);"><br>
                    </div>
                </div>
                <div class='content'>
                    <div class="contentOne" style="display: none">
                        @*@Html.TextBoxFor(model => model.SelectedOne, new { @class = "form-control form-control-inline", @placeholder = "placeholder" })*@
                    </div>
                    <div class="contentTwo" style="display: none">
                        @*@Html.TextAreaFor(model => model.SelectedTwo, new { @class = "form-control" })*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check text-right">
                        @*<input class="form-check-input" name="Check[1]" type="checkbox"/><br>
                            @Html.CheckBoxFor(model => model.Check, new { @class = "form-check-input" })*@
                    </div>
                </div>
            </div>

        </div>
        <div class="form-group text-right mt-3">
            <input type="button" class="addField btn btn-success" value="Добавить поле" onclick="addField(this);"><br><br>
        </div>
        <div class="form-group mb-3">
            <input type="submit" class="btn btn-success" value="Сохранить">
            <input type="button" class="btn btn-danger" value="Закрыть">
        </div>
        </form>
        @*}*@
</div>

<script type="text/javascript" src="~/Scripts/editForm.js"></script>

